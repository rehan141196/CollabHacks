{"version":3,"sources":["call.js"],"names":["boolToDirection","webrtcHelpers","deprecatedCallEventNames","getMediaDirectionFromSDP","kind","sdp","parsed","media","find","m","type","content","direction","reverseMediaDirection","dir","Error","capitalize","audio","video","Call","WebexPlugin","extend","namespace","mediaConnections","children","WebRTCMediaEngine","collections","memberships","CallMemberships","session","activeParticipantsCount","default","required","remoteAudioMuted","remoteVideoMuted","correlationId","facingMode","values","internalCallId","setOnce","locus","localMediaStream","locusJoinInFlight","locusLeaveInFlight","me","derived","id","deps","fn","isActive","joinedOnThisDevice","webex","locusUrl","device","mediaConnection","mediaId","remoteMember","isSelf","undefined","from","isCall","isInitiator","to","state","config","enableExperimentalGroupCallingSupport","status","previousAttributes","host","roomId","conversationUrl","base64","encode","split","pop","remoteMediaStream","localScreenShare","receivingAudio","receivingVideo","sendingAudio","sendingVideo","supportsDtmf","acknowledge","logger","info","internal","alert","then","setLocus","answer","options","resolve","pc","remoteDescription","createOrJoinLocus","changeReceivingMedia","value","offerSdp","section","includes","once","newDirection","console","warn","setMedia","changeSendingMedia","tracks","senderTracks","filter","t","length","updateMuteToggles","reject","cleanup","process","nextTick","stop","stopListening","mercury","off","target","constraints","ideal","phone","defaultFacingMode","mode","recvOnly","offerOptions","offerToReceiveAudio","offerToReceiveVideo","fake","uuid","v4","bandwidthLimit","audioBandwidthLimit","videoBandwidthLimit","createOffer","createOrJoin","localSdp","remoteSdp","JSON","parse","signalingState","ended","acceptAnswer","catch","err","error","decline","dial","invitee","validate","decode","resourceType","feature","getFeature","getServiceUrl","u","url","services","conversationServiceUrl","connect","reason","trigger","getRawStatsStream","StatsStream","getStatsStream","pipe","StatsFilter","hangup","when","leave","initialize","initArgs","prototype","on","onChangeActiveParticipantsCount","onChangeIsActive","onChangeLocalMediaStream","onChangeRemoteMember","forEach","key","listenTo","args","onMembershipsAudioMuted","onMembershipsChangeState","onMembershipsVideoMuted","event","onLocusEvent","onMediaNegotiationNeeded","listenToAndRun","participants","set","eventName","rest","stack","toString","devices","item","data","eventType","replaces","replaced","lastActive","audioMuted","videoMuted","model","offer","audioOfferDir","videoOfferDir","screenOfferDir","updateMediaOptions","updateMedia","pollForExpectedLocusAndSdp","emit","track","getTracks","enabled","hangupIfLastActive","call","meeting","previousLocus","self","count","isExpectedDirection","validateLocusMediaState","setTimeout","sync","audioAnswerDir","videoAnswerDir","screenAnswerDir","expectedAudioAnswerDir","expectedVideoAnswerDir","expectedScreenAnswerDir","releaseFloor","mediaShare","releaseFloorGrant","requestFloor","requestFloorGrant","incoming","recursing","current","map","index","action","compare","USE_INCOMING","merge","FETCH","get","sendDtmf","tones","sendFeedback","feedback","metrics","submit","startApplicationShare","mediaSource","startScreenShare","startReceivingAudio","startReceivingVideo","startSendingAudio","startSendingVideo","stopScreenShare","stopReceivingAudio","stopReceivingVideo","stopSendingAudio","stopSendingVideo","toggleFacingMode","constraint","toggleReceivingAudio","toggleReceivingVideo","toggleSendingAudio","toggleSendingVideo","payload","updateVideoMuteSdp","isMuted","newDir","oldDir","replace","RegExp","locusAudio","audioStatus","toLowerCase","mediaAudio","audioDirection","locusVideo","videoStatus","mediaVideo","videoDirection","waitForExpectedLocus","listener","oneFlight","retry","make","attrs"],"mappings":"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","file":"call.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint-env browser: true */\n\nimport {defaults, find, get, wrap} from 'lodash';\nimport {debounce} from 'lodash-decorators';\nimport {parse} from 'sdp-transform';\nimport uuid from 'uuid';\nimport {WebexPlugin} from '@webex/webex-core';\nimport {\n  base64,\n  deprecated,\n  oneFlight,\n  retry,\n  tap,\n  whileInFlight\n} from '@webex/common';\nimport {\n  USE_INCOMING,\n  FETCH\n} from '@webex/internal-plugin-locus';\nimport WebRTCMediaEngine, {webrtcHelpers} from '@webex/media-engine-webrtc';\n\nimport {\n  waitForMediaShare,\n  getState,\n  getStatus,\n  getThisDevice,\n  isCall,\n  activeParticipants,\n  direction,\n  isActive,\n  joinedOnThisDevice,\n  makeInternalCallId,\n  participantsToCallMemberships\n} from './state-parsers';\nimport boolToStatus from './bool-to-status';\nimport CallMemberships from './call-memberships';\nimport StatsFilter from './stats/filter';\nimport StatsStream from './stats/stream';\n\nconst {\n  boolToDirection\n} = webrtcHelpers;\n\nconst deprecatedCallEventNames = [\n  'ringing',\n  'connected',\n  'disconnected',\n  'replaced'\n];\n\n/**\n * Pulls the direction line for the specified media kind from an sdp\n * @param {string} kind\n * @param {string} sdp\n * @private\n * @returns {string}\n */\nfunction getMediaDirectionFromSDP(kind, sdp) {\n  const parsed = typeof sdp === 'string' ? parse(sdp) : sdp;\n\n  let media;\n\n  if (kind === 'screen') {\n    media = parsed.media.find((m) => m.type === 'video' && m.content);\n  }\n  else {\n    media = parsed.media.find((m) => m.type === kind);\n  }\n  if (!media || !media.direction) {\n    return 'inactive';\n  }\n\n  return media.direction;\n}\n\n/**\n * Reverses a media direction from offer to answer (e.g. sendonly -> recvonly)\n * @param {string} dir\n * @private\n * @returns {string}\n */\nfunction reverseMediaDirection(dir) {\n  switch (dir) {\n    case 'inactive':\n    case 'sendrecv':\n      return dir;\n    case 'sendonly':\n      return 'recvonly';\n    case 'recvonly':\n      return 'sendonly';\n    default:\n      throw new Error(`direction \"${dir}\" is not valid`);\n  }\n}\n\nconst capitalize = {\n  audio: 'Audio',\n  video: 'Video'\n};\n\n/**\n * @event ringing\n * @instance\n * @memberof Call\n * @deprecated with {@link PhoneConfig.enableExperimentalGroupCallingSupport}\n * enabled; instead, listen for {@link Call.membership:notified}\n */\n\n/**\n * @event connected\n * @instance\n * @memberof Call\n * @deprecated with {@link PhoneConfig.enableExperimentalGroupCallingSupport}\n * enabled; instead, listen for {@link Call.active}\n */\n\n/**\n * @event disconnected\n * @instance\n * @memberof Call\n * @deprecated with {@link PhoneConfig.enableExperimentalGroupCallingSupport}\n * enabled; instead, listen for {@link Call.inactive}\n */\n\n/**\n * @event active\n * @instance\n * @memberof Call\n * @description only emitted if enableExperimentalGroupCallingSupport is enabled\n */\n\n/**\n * @event initializing\n * @instance\n * @memberof Call\n * @description only emitted if enableExperimentalGroupCallingSupport is enabled\n */\n\n/**\n * @event inactive\n * @instance\n * @memberof Call\n * @description only emitted if enableExperimentalGroupCallingSupport is enabled\n */\n\n/**\n * @event terminating\n * @instance\n * @memberof Call\n * @description only emitted if enableExperimentalGroupCallingSupport is enabled\n */\n\n/**\n * @event localMediaStream:change\n * @instance\n * @memberof Call\n */\n\n/**\n * @event remoteMediaStream:change\n * @instance\n * @memberof Call\n */\n\n/**\n * @event error\n * @instance\n * @memberof Call\n */\n\n/**\n * @event membership:notified\n * @instance\n * @memberof Call\n * @type {CallMembership}\n * @description This replaces the {@link Call.ringing} event, but note that it's\n * subtly different. {@link Call.ringing} is emitted when the remote party calls\n * {@link Call#acknowledge()} whereas {@link Call.membership:notified} emits\n * shortly after (but as a direct result of) locally calling\n * {@link Phone#dial()}\n */\n\n/**\n * @event membership:connected\n * @instance\n * @memberof Call\n * @type {CallMembership}\n */\n\n/**\n * @event membership:declined\n * @instance\n * @memberof Call\n * @type {CallMembership}\n */\n\n/**\n * @event membership:disconnected\n * @instance\n * @memberof Call\n * @type {CallMembership}\n */\n\n/**\n * @event membership:waiting\n * @instance\n * @memberof Call\n * @type {CallMembership}\n */\n\n/**\n * @event membership:change\n * @instance\n * @memberof Call\n * @type {CallMembership}\n */\n\n/**\n * @event memberships:add\n * @instance\n * @memberof Call\n * @description Emitted when a new {@link CallMembership} is added to\n * {@link Call#memberships}. Note that {@link CallMembership#state} still needs\n * to be read to determine if the instance represents someone actively\n * participating the call.\n */\n\n/**\n * @event memberships:remove\n * @instance\n * @memberof Call\n * @description Emitted when a {@link CallMembership} is removed from\n * {@link Call#memberships}.\n */\n\n/**\n * Payload for {@link Call#sendFeedback}\n * @typedef {Object} FeedbackObject\n * @property {number} userRating Number between 1 and 5 (5 being best) to let\n * the user score the call\n * @property {string} userComments Freeform feedback from the user about the\n * call\n * @property {Boolean} includeLogs set to true to submit client logs to the\n * Webex Teams cloud. Note: at this time, all logs, not just call logs,\n * generated by the sdk will be uploaded to the Webex Cloud. Care has been taken\n * to avoid including PII in these logs, but if you've taken advantage of the\n * SDK's logger, you should make sure to avoid logging PII as well.\n */\n\n/**\n * @class\n */\nconst Call = WebexPlugin.extend({\n  namespace: 'Phone',\n\n  mediaConnections: [],\n\n  children: {\n    media: WebRTCMediaEngine\n  },\n\n  collections: {\n    /**\n     * @instance\n     * @memberof Call\n     * @type CallMemberships\n     */\n    memberships: CallMemberships\n  },\n\n  session: {\n    activeParticipantsCount: {\n      default: 0,\n      required: true,\n      type: 'number'\n    },\n    /**\n     * Indicates if the other party in the call has turned off their microphone.\n     * `undefined` for multiparty calls\n     * @instance\n     * @memberof Call\n     * @readonly\n     * @type {boolean}\n     */\n    remoteAudioMuted: {\n      default: false,\n      required: false,\n      type: 'boolean'\n    },\n\n    /**\n     * Indicates if the other party in the call has turned off their camera.\n     * `undefined` for multiparty calls\n     * @instance\n     * @memberof Call\n     * @readonly\n     * @type {boolean}\n     */\n    remoteVideoMuted: {\n      default: false,\n      required: false,\n      type: 'boolean'\n    },\n\n    correlationId: 'string',\n    /**\n     * @instance\n     * @memberof Call\n     * @readonly\n     * @type {string}\n     */\n    facingMode: {\n      type: 'string',\n      values: ['user', 'environment']\n    },\n    /**\n     * Derived from locus.id and locus.fullState.lastActive. Not actually a\n     * \"derived\" property because it shouldn't be reset in event a locus\n     * replacement. Marked as private because this isn't necessarily the callId\n     * that we'll eventually expose as a first-class feature.\n     * @instance\n     * @memberof Call\n     * @private\n     * @readonly\n     * @type {string}\n     */\n    internalCallId: {\n      setOnce: true,\n      type: 'string'\n    },\n    locus: 'object',\n    /**\n     * Returns the local MediaStream for the call. May initially be `null`\n     * between the time @{Phone#dial is invoked and the  media stream is\n     * acquired if {@link Phone#dial} is invoked without a `localMediaStream`\n     * option.\n     *\n     * This property can also be set mid-call in which case the streams sent to\n     * the remote party are replaced by this stream. On success, the\n     * {@link Call}'s {@link localMediaStream:change} event fires, notifying any\n     * listeners that we are now sending media from a new source.\n     * @instance\n     * @memberof Call\n     * @type {MediaStream}\n     */\n    localMediaStream: 'object',\n\n    locusJoinInFlight: {\n      default: false,\n      type: 'boolean'\n    },\n    locusLeaveInFlight: {\n      default: false,\n      type: 'boolean'\n    },\n    /**\n     * Test helper. Shortcut to the current user's membership object. not\n     * official for now, but may get published at some point\n     * @instance\n     * @memberof Call\n     * @private\n     * @type {CallMembership}\n     */\n    me: {\n      type: 'object'\n    }\n  },\n\n  // Note, in its current form, any derived property that is an object will emit\n  // a change event everytime a locus gets replaced, even if no values change.\n  // For the moment, this is probably ok; once we have multi-party, regular\n  // change events on activeParticipants may be a problem.\n  derived: {\n    id: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return get(this, 'locus.url');\n      }\n    },\n    isActive: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return !!(this.locus && isActive(this.locus));\n      }\n    },\n    joinedOnThisDevice: {\n      deps: ['locus'],\n      default: false,\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return !!(this.locus && joinedOnThisDevice(this.webex, this.locus));\n      }\n    },\n    locusUrl: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return get(this, 'locus.url');\n      }\n    },\n    device: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return getThisDevice(this.webex, this.locus);\n      }\n    },\n    mediaConnection: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        const device = getThisDevice(this.webex, this.locus);\n\n        return get(device, 'mediaConnections[0]');\n      }\n    },\n    mediaId: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        const device = getThisDevice(this.webex, this.locus);\n\n        return get(device, 'mediaConnections[0].mediaId');\n      }\n    },\n    /**\n     * The other participant in a two-party call. `undefined` for multiparty\n     * calls\n     * @instance\n     * @memberof Call\n     * @readyonly\n     * @type {CallMembership}\n     */\n    remoteMember: {\n      deps: [\n        'memberships',\n        'locus'\n      ],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        if (isCall(this.locus)) {\n          return this.memberships.find((m) => !m.isSelf);\n        }\n\n        return undefined;\n      }\n    },\n    direction: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        // This seems brittle, but I can't come up with a better way. The only\n        // way we should have a Call without a locus is if we just initiated a\n        // call but haven't got the response from locus yet.\n        if (!this.locus) {\n          return 'out';\n        }\n\n        return direction(this.locus);\n      }\n    },\n    /**\n     * The initiating participant in a two-party call.\n     * @deprecated The {@link Call#from} attribute will likely be replaced by\n     * the {@link Call#host}.\n     * @instance\n     * @memberof Call\n     * @readyonly\n     * @type {CallMembership}\n     */\n    from: {\n      deps: [\n        'memberships'\n      ],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        if (this.isCall) {\n          return this.memberships.find((m) => m.isInitiator);\n        }\n\n        return undefined;\n      }\n    },\n    to: {\n      deps: [\n        'memberships'\n      ],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        if (this.isCall) {\n          return this.memberships.find((m) => !m.isInitiator);\n        }\n\n        return undefined;\n      }\n    },\n    /**\n     * <b>active</b> - At least one person (not necessarily this user) is\n     * participating in the call<br/>\n     * <b>inactive</b> - No one is participating in the call<br/>\n     * <b>initializing</b> - reserved for future use<br/>\n     * <b>terminating</b> - reserved for future use<br/>\n     * Only defined if\n     * {@link PhoneConfig.enableExperimentalGroupCallingSupport} has been\n     * enabled\n     * @instance\n     * @memberof Call\n     * @member {string}\n     * @readonly\n     */\n    state: {\n      deps: [\n        'locus'\n      ],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        if (this.config.enableExperimentalGroupCallingSupport) {\n          return getState(this.locus);\n        }\n\n        return undefined;\n      }\n    },\n    /**\n     * <b>initiated</b> - Offer was sent to remote party but they have not yet\n     * accepted <br>\n     * <b>ringing</b> - Remote party has acknowledged the call <br>\n     * <b>connected</b> - At least one party is still on the call <br>\n     * <b>disconnected</b> - All parties have dropped <br>\n     * <b>replaced</b> - In (hopefully) rare cases, the underlying data backing\n     * a Call instance may change in such a way that further interaction with\n     * that Call is handled by a different instance. In such cases, the first\n     * Call's status, will transition to `replaced`, which is almost the same\n     * state as `disconnected`. Generally speaking, such a transition should not\n     * happen for a Call instance that is actively sending/receiving media.\n     * @deprecated The {@link Call#status} attribute will likely be replaced by\n     * the {@link Call#state}.\n     * @instance\n     * @memberof Call\n     * @member {string}\n     * @readonly\n     */\n    status: {\n      deps: [\n        'locus'\n      ],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return getStatus(this.webex, this.locus, this.previousAttributes().locus);\n      }\n    },\n    /**\n     * The host of the call\n     * Only defined if\n     * {@link PhoneConfig.enableExperimentalGroupCallingSupport} has been\n     * enabled\n     * @instance\n     * @memberof Call\n     * @readyonly\n     * @type {object}\n     */\n    host: {\n      deps: [\n        'locus'\n      ],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        if (this.config.enableExperimentalGroupCallingSupport) {\n          return this.locus.host;\n        }\n\n        return undefined;\n      }\n    },\n    /**\n     * The room id of the call\n     * Only defined if\n     * {@link PhoneConfig.enableExperimentalGroupCallingSupport} has been\n     * enabled\n     * @instance\n     * @memberof Call\n     * @readyonly\n     * @type {object}\n     */\n    roomId: {\n      deps: [\n        'locus'\n      ],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        if (this.config.enableExperimentalGroupCallingSupport && this.locus.conversationUrl) {\n          return base64.encode(`ciscospark://us/ROOM/${this.locus.conversationUrl.split('/').pop()}`);\n        }\n\n        return undefined;\n      }\n    },\n    /**\n     * Access to the remote party’s `MediaStream`.\n     * @instance\n     * @memberof Call\n     * @member {MediaStream}\n     * @readonly\n     */\n    remoteMediaStream: {\n      deps: ['media.remoteMediaStream'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return this.media.remoteMediaStream;\n      }\n    },\n    /**\n     * Access to the local party’s screen share `MediaStream`.\n     * @instance\n     * @memberof Call\n     * @member {MediaStream}\n     * @readonly\n     */\n    localScreenShare: {\n      deps: ['media.localScreenShare'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return this.media.localScreenShare;\n      }\n    },\n    receivingAudio: {\n      deps: ['media.receivingAudio'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return this.media.receivingAudio;\n      }\n    },\n    receivingVideo: {\n      deps: ['media.receivingVideo'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return this.media.receivingVideo;\n      }\n    },\n    sendingAudio: {\n      deps: ['media.sendingAudio'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return this.media.sendingAudio;\n      }\n    },\n    sendingVideo: {\n      deps: ['media.sendingVideo'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return this.media.sendingVideo;\n      }\n    },\n    isCall: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return isCall(this.locus);\n      }\n    },\n    supportsDtmf: {\n      deps: ['locus'],\n      /**\n       * @private\n       * @returns {mixed}\n       */\n      fn() {\n        return get(this, 'locus.self.enableDTMF');\n      }\n    }\n  },\n\n  @oneFlight\n  /**\n   * Use to acknowledge (without answering) an incoming call. Will cause the\n   * initiator's Call instance to emit the ringing event.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  acknowledge() {\n    this.logger.info('call: acknowledging');\n\n    return this.webex.internal.locus.alert(this.locus)\n      .then((locus) => this.setLocus(locus))\n      .then(tap(() => this.logger.info('call: acknowledged')));\n  },\n\n  @oneFlight\n  @whileInFlight('locusJoinInFlight')\n  // Note: the `whileInFlight` decorator screws up name inferrence, so we need\n  // to include @name below.\n  /**\n   * Answers an incoming call.\n   * @instance\n   * @name answer\n   * @memberof Call\n   * @param {Object} options\n   * @param {MediaStreamConstraints} options.constraints\n   * @returns {Promise}\n   */\n  answer(options) {\n    this.logger.info('call: answering');\n    if (!this.locus) {\n      this.logger.info('call: no locus provided, answer() is a noop');\n\n      return Promise.resolve();\n    }\n    // Locus may think we're joined on this device if we e.g. reload the page,\n    // so, we need to check if we also have a working peer connection\n    // this.media.pc.remoteDescription.sdp is a temporary proxy for\n    // pc.connectionState until chrome catches up to the spec\n    if (this.joinedOnThisDevice && this.media.pc.remoteDescription && this.media.pc.remoteDescription.sdp) {\n      this.logger.info('call: already joined on this device');\n\n      return Promise.resolve();\n    }\n\n    return this.createOrJoinLocus(this.locus, options)\n      .then(tap(() => this.logger.info('call: answered')));\n  },\n\n  /**\n   * Change the receiving media state. may induce a renegoatiation\n   * @instance\n   * @memberof Call\n   * @param {string} kind one of \"audio\" or \"video\"\n   * @param {boolean} value\n   * @private\n   * @returns {Promise}\n   */\n  changeReceivingMedia(kind, value) {\n    return new Promise((resolve) => {\n      const sdp = parse(this.media.offerSdp);\n      const section = find(sdp.media, {type: kind});\n\n      // If the current offer is going to trigger a renegotiation, then we don't\n      // need to renegotiate here.\n      if (!section || !section.direction.includes('recv')) {\n        this.logger.info('changeReceivingMedia: expecting to renegotiate, waiting for media to emit \"answeraccepted\"');\n        this.media.once('answeraccepted', () => resolve());\n      }\n      else {\n        this.logger.info(`changeReceivingMedia: expecting to renegotiate, waiting for call to emit \"change:receiving${capitalize[kind]}\"`);\n        this.once(`change:receiving${capitalize[kind]}`, () => resolve());\n      }\n\n      const newDirection = boolToStatus(this.media[`sending${capitalize[kind]}`], value);\n\n      console.warn(`starting to setMedia ${kind} to ${newDirection}`);\n      this.media.setMedia(kind, newDirection);\n    });\n  },\n\n  /**\n   * Change the receiving media state. may induce a renegoatiation\n   * @instance\n   * @memberof Call\n   * @param {string} kind one of \"audio\" or \"video\"\n   * @param {boolean} value\n   * @private\n   * @returns {Promise}\n   */\n  changeSendingMedia(kind, value) {\n    // Changing media direction only should not trigger renegotiation as long as a new\n    // track is not introduced. If that is the case we would expect renegotiation to happen.\n    this.logger.info(`changeSendingMedia: changing sending \"${kind}\" to \"${value}\"`);\n    if (['audio', 'video'].includes(kind)) {\n      const tracks = this.media.senderTracks.filter((t) => t.kind === kind);\n      const newDirection = boolToStatus(value, this.media[`receiving${capitalize[kind]}`]);\n\n      if (tracks.length > 0) {\n        // track already exists, we only need to toggle direction\n        return this.media.setMedia(kind, newDirection)\n          .then(() => this.updateMuteToggles(kind, value));\n      }\n\n      // adding a new track and needs renegotiation\n      return new Promise((resolve) => {\n        this.once('mediaNegotiationCompleted', () => resolve());\n        this.media.setMedia(kind, newDirection);\n      });\n    }\n\n    return Promise.reject(new Error('kind must be one of \"audio\" or \"video\"'));\n  },\n\n\n  /**\n   * Does the cleanup after a call has ended\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {Promise}\n   */\n  cleanup() {\n    return new Promise((resolve) => {\n      // need to do this on next tick otherwise this.off() prevents remaining\n      // events from being received (e.g. other listeners for `disconnected`\n      // won't execute)\n      process.nextTick(() => {\n        this.media.stop();\n        this.stopListening(this.webex.internal.mercury);\n        this.off();\n        resolve();\n      });\n    });\n  },\n\n  // The complexity in createOrJoinLocus is largely driven up by fairly readable `||`s\n  /* eslint-disable complexity */\n  @oneFlight\n  /**\n   * Call and answer require nearly identical logic, so this method unifies them.\n   * @instance\n   * @memberof Call\n   * @param {Object|locus} target\n   * @param {Object} options\n   * @todo remove 'locusMethodName' and move that logic to locus plugin\n   * @todo move options and target processing to separate function\n   * @todo rename to join()?\n   * @returns {Promise}\n   */\n  createOrJoinLocus(target, options = {}) {\n    if (options.localMediaStream) {\n      this.localMediaStream = options.localMediaStream;\n    }\n    else {\n      if (!options.constraints) {\n        options.constraints = {\n          audio: true,\n          video: {\n            facingMode: {\n              ideal: this.webex.phone.defaultFacingMode\n            }\n          }\n        };\n      }\n\n      const mode = get(options, 'constraints.video.facingMode.ideal', get(options, 'constraints.video.facingMode.exact'));\n\n      if (mode === 'user' || mode === 'environment') {\n        this.facingMode = mode;\n      }\n\n      const recvOnly = !options.constraints.audio && !options.constraints.video;\n\n      options.offerOptions = defaults(options.offerOptions, {\n        offerToReceiveAudio: recvOnly || !!options.constraints.audio,\n        offerToReceiveVideo: recvOnly || !!options.constraints.video\n      });\n\n      if (options.constraints.fake) {\n        this.media.constraints.fake = true;\n      }\n\n      this.media.setMedia('audio', boolToStatus(options.constraints.audio, options.offerOptions.offerToReceiveAudio), options.constraints.audio);\n      if (get(options, 'constraints.video.mediaSource') === 'screen' || get(options, 'constraints.video.mediaSource') === 'application') {\n        this.media.setMedia('screen', 'sendonly');\n      }\n      else {\n        this.media.setMedia('video', boolToStatus(options.constraints.video, options.offerOptions.offerToReceiveVideo), options.constraints.video);\n      }\n    }\n\n    if (!target.correlationId) {\n      options.correlationId = uuid.v4();\n      this.correlationId = options.correlationId;\n    }\n\n    if (!this.correlationId) {\n      this.correlationId = target.correlationId;\n    }\n\n    // reminder: not doing this copy in initialize() because config may not yet\n    // be available\n    this.media.bandwidthLimit = {\n      audioBandwidthLimit: this.config.audioBandwidthLimit,\n      videoBandwidthLimit: this.config.videoBandwidthLimit\n    };\n\n    return this.media.createOffer()\n      .then(tap(() => this.logger.info('created offer')))\n      .then(() => this.webex.internal.locus.createOrJoin(target, Object.assign({\n        localSdp: this.media.offerSdp,\n        correlationId: this.correlationId\n      }, options)))\n      .then(tap(() => this.logger.info('sent offer to locus')))\n      .then(tap(() => this.logger.info('setting locus')))\n      .then((locus) => this.setLocus(locus))\n      .then(tap(() => this.logger.info('successfully set locus')))\n      .then(() => {\n        const answer = this.mediaConnection.remoteSdp ?\n          JSON.parse(this.mediaConnection.remoteSdp).sdp :\n          JSON.parse(this.mediaConnections.remoteSdp).sdp;\n\n        this.logger.info('accepting answer');\n        this.logger.info('peer state', this.media.pc && this.media.pc.signalingState);\n        if (!this.media.ended) {\n          return this.media.acceptAnswer(answer)\n            .then(() => this.logger.info('answer accepted'))\n            .catch((err) => {\n              this.logger.error('failed to accept answer', err);\n\n              return Promise.reject(err);\n            });\n        }\n        this.logger.info('call: already ended, not accepting answer');\n\n        return Promise.resolve();\n      });\n  },\n  /* eslint-enable complexity */\n\n  @deprecated('Please use Call#reject()')\n  /**\n   * Alias of {@link Call#reject}\n   * @see {@link Call#reject}\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  decline() {\n    return this.reject();\n  },\n\n  @oneFlight\n  /**\n   * Used by {@link Phone#dial} to initiate an outbound call\n   * @instance\n   * @memberof Call\n   * @param {[type]} invitee\n   * @param {[type]} options\n   * @private\n   * @returns {[type]}\n   */\n  dial(invitee, options) {\n    this.locusJoinInFlight = true;\n    this.logger.info('call: dialing');\n\n    let target = invitee;\n\n    if (base64.validate(invitee)) {\n      // eslint-disable-next-line no-unused-vars\n      const parsed = base64.decode(invitee).split('/');\n      const resourceType = parsed[3];\n      const id = parsed[4];\n      const feature = this.webex.internal.feature.getFeature('developer', 'web-high-availability');\n\n      if (resourceType === 'PEOPLE') {\n        target = id;\n      }\n\n      if (resourceType === 'ROOM') {\n        if (!get(this, 'config.enableExperimentalGroupCallingSupport')) {\n          throw new Error('Group calling is not enabled. Please enable config.phone.enableExperimentalGroupCallingSupport');\n        }\n        if (feature && feature.value) {\n          this.webex.internal.device.getServiceUrl('conversation')\n            .then((u) => {\n              target = {\n                url: `${u}/conversations/${id}/locus`\n              };\n\n              return target;\n            });\n        }\n        else {\n          target = {\n            url: `${this.webex.internal.device.services.conversationServiceUrl}/conversations/${id}/locus`\n          };\n        }\n      }\n    }\n\n    // Note: mercury.connect() will call device.register() if needed. We're not\n    // using phone.register() here because it guarantees a device refresh, which\n    // is probably unnecessary.\n    this.webex.internal.mercury.connect()\n      .then(() => this.createOrJoinLocus(target, options))\n      .then(tap(() => this.logger.info('call: dialed')))\n      .catch((reason) => {\n        this.trigger('error', reason);\n      })\n      .then(() => {\n        this.locusJoinInFlight = false;\n      });\n\n    return this;\n  },\n\n  /**\n   * Returns a {@link Readable} that emits {@link Call#media.pc}'s\n   * {@link RTCStatsReport} every second.\n   * @instance\n   * @memberof Call\n   * @returns {StatsStream}\n   */\n  getRawStatsStream() {\n    return new StatsStream(this.media.pc);\n  },\n\n  /**\n   * Returns a {@link StatsStream} piped through a {@link StatsFilter}\n   * @instance\n   * @memberof Call\n   * @returns {Readable}\n   */\n  getStatsStream() {\n    return this.getRawStatsStream()\n      .pipe(new StatsFilter());\n  },\n\n  /**\n   * Disconnects the active call. Applies to both incoming and outgoing calls.\n   * This method may be invoked in any call state and the SDK should take care\n   * to tear down the call and free up all resources regardless of the state.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  hangup() {\n    // Note: not a @oneFlight because this function must call itself\n    if (this.direction === 'in' && !this.joinedOnThisDevice) {\n      return this.reject();\n    }\n\n    this.logger.info('call: hanging up');\n\n    this.media.stop();\n\n    if (this.locusJoinInFlight) {\n      this.logger.info('call: locus join in flight, waiting for rest call to complete before hanging up');\n\n      return this.when('change:locusJoinInFlight')\n        .then(() => this.hangup());\n    }\n\n    if (!this.locus) {\n      return this.cleanup()\n        .then(() => this.logger.info('call: hang up complete, call never created'));\n    }\n\n    return this.leave();\n  },\n\n  /**\n   * Initializer\n   * @instance\n   * @memberof Call\n   * @private\n   * @param {Object} attrs\n   * @param {Object} options\n   * @returns {undefined}\n   */\n  initialize(...initArgs) {\n    Reflect.apply(WebexPlugin.prototype.initialize, this, initArgs);\n\n    this.on('change:activeParticipantsCount', (...args) => this.onChangeActiveParticipantsCount(...args));\n    // This handler is untested because there's no way to provoke it. It's\n    // probably actually only relevant for group calls.\n    this.on('change:isActive', (...args) => this.onChangeIsActive(...args));\n    this.on('change:localMediaStream', (...args) => this.onChangeLocalMediaStream(...args));\n    // Reminder: this is not a derived property so that we can reassign the\n    // stream midcall\n    this.on('change:media.localMediaStream', () => {\n      this.localMediaStream = this.media.localMediaStream;\n    });\n    this.on('change:remoteMember', (...args) => this.onChangeRemoteMember(...args));\n    [\n      'localMediaStream',\n      'remoteAudioMuted',\n      'remoteMediaStream',\n      'remoteVideoMuted',\n      'localScreenShare'\n    ].forEach((key) => {\n      this.on(`change:${key}`, () => this.trigger(`${key}:change`));\n    });\n    this.on('replaced', () => this.cleanup());\n\n    this.listenTo(this.memberships, 'add', (...args) => this.trigger('memberships:add', ...args));\n    this.listenTo(this.memberships, 'change', (...args) => this.trigger('membership:change', ...args));\n    this.listenTo(this.memberships, 'change:audioMuted', (...args) => this.onMembershipsAudioMuted(...args));\n    this.listenTo(this.memberships, 'change:state', (...args) => this.onMembershipsChangeState(...args));\n    this.listenTo(this.memberships, 'change:videoMuted', (...args) => this.onMembershipsVideoMuted(...args));\n    this.listenTo(this.memberships, 'remove', (...args) => this.trigger('memberships:remove', ...args));\n\n    this.listenTo(this.webex.internal.mercury, 'event:locus', (event) => this.onLocusEvent(event));\n    this.listenTo(this.webex.internal.mercury, 'event:locus.difference', (event) => this.onLocusEvent(event));\n\n    this.listenTo(this.media, 'error', (error) => this.trigger('error', error));\n    this.listenTo(this.media, 'internalTrackUpdate', () => {\n      this.trigger('remoteMediaStream:change');\n    });\n    this.listenTo(this.media, 'negotiationneeded', (...args) => this.onMediaNegotiationNeeded(...args));\n\n    if (this.locus) {\n      this.internalCallId = makeInternalCallId(this.locus);\n    }\n    else {\n      this.once('change:locus', () => {\n        this.internalCallId = makeInternalCallId(this.locus);\n      });\n    }\n\n    this.memberships.listenToAndRun(this, 'change:locus', () => {\n      if (this.locus && this.locus.participants) {\n        // Reminder: we're parsing here instead of CallMembership(s) so that we\n        // can avoid making those classes webex aware and therefore keep them a\n        // lot simpler\n        this.memberships.set(participantsToCallMemberships(this.webex, this.locus));\n        this.me = this.memberships.find((m) => m.isSelf);\n      }\n    });\n\n    if (this.config.enableExperimentalGroupCallingSupport) {\n      this.on('inactive', () => this.hangup());\n      this.on('inactive', () => this.cleanup());\n\n      this.on('change:state', () => {\n        process.nextTick(() => this.trigger(this.state));\n      });\n      this.on = wrap(this.on, (fn, eventName, ...rest) => {\n        if (deprecatedCallEventNames.includes(eventName)) {\n          throw new Error(`The \"${eventName}\" event is no longer valid with \"enableExperimentalGroupCallingSupport===true\"`);\n        }\n\n        return Reflect.apply(fn, this, [eventName, ...rest]);\n      });\n    }\n    else {\n      this.on('disconnected', () => this.hangup());\n      this.on('disconnected', () => this.cleanup());\n\n      this.on('change:status', () => {\n        process.nextTick(() => this.trigger(this.status));\n      });\n    }\n  },\n\n\n  @oneFlight\n  @whileInFlight('locusLeaveInFlight')\n  /**\n   * Does the internal work necessary to end a call while allowing hangup() to\n   * call itself without getting stuck in promise change because of oneFlight\n   * The name of this function is temporary to address the no-underscore-dangle\n   * rule. A future commit in this PR will rename all of the\n   * reject/end/hangup/finish functions to be more meaningful and not just be\n   * synonyms the same word.\n   * @private\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  leave() {\n    this.logger.info('leave: attempting to leave locus');\n    const status = get(this, this.config.enableExperimentalGroupCallingSupport ? 'me.state' : 'status');\n\n    if (status === 'disconnected') {\n      this.logger.info('already hung up, not calling locus again');\n\n      return Promise.resolve();\n    }\n\n    if (status === 'declined') {\n      this.logger.info('call was declined, not leaving again');\n\n      return Promise.resolve();\n    }\n\n    if (status !== 'connected') {\n      this.logger.info('call is neither connected, disconnected, or declined, declining instead of leaving');\n\n      return this.decline();\n    }\n\n    this.logger.info('leave: leaving locus');\n\n    return this.webex.internal.locus.leave(this.locus)\n      .catch((err) => {\n        this.logger.error('leave: locus leave error: ', err.stack || err.toString());\n\n        return Promise.reject(err);\n      })\n      .then(tap(() => this.logger.info(`leave ${this.locus.id}: finished leaving via locus`)))\n      .then(tap(() => this.logger.info(`leave ${this.locus.id}: setting locus`)))\n      .then((locus) => this.setLocus(locus))\n      .then(tap(() => this.logger.info(`leave ${this.locus.id}: finished setting locus`)))\n      // Note: not stopping event-listening here; that'll happening\n      // automatically when `disconnected` fires.\n      .then(tap(() => this.logger.info('call: hung up')));\n  },\n\n  /**\n   * Handles an incoming mercury event if relevant to this call.\n   * @instance\n   * @memberof Call\n   * @param {Types~MercuryEvent} event\n   * @private\n   * @returns {undefined}\n   */\n  onLocusEvent(event) {\n    const devices = get(event, 'data.locus.self.devices');\n    const device = devices && find(devices, (item) => item.url === this.webex.internal.device.url);\n\n    const internalCallId = this.locus && makeInternalCallId(event.data.locus);\n\n    if (internalCallId === this.internalCallId || device && this.correlationId === device.correlationId) {\n      this.logger.info(`locus event: ${event.data.eventType}`);\n      this.setLocus(event.data.locus);\n    }\n\n\n    if (event.data.locus.replaces) {\n      for (const replaced of event.data.locus.replaces) {\n        if (`${replaced.locusUrl}_${replaced.lastActive}` === this.internalCallId) {\n          this.setLocus(event.data.locus);\n          this.logger.info(`locus replacement event: ${event.data.eventType}`, this.locusUrl, '->', event.data.locus.url);\n\n          return;\n        }\n      }\n    }\n  },\n\n  /**\n   * Event handler\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {undefined}\n   */\n  onMembershipsAudioMuted() {\n    this.logger.info('onMembershipsAudioMuted');\n    if (this.remoteMember) {\n      this.remoteAudioMuted = this.remoteMember.audioMuted;\n    }\n  },\n\n  /**\n   * Event handler\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {undefined}\n   */\n  onMembershipsVideoMuted() {\n    this.logger.info('onMembershipsVideoMuted');\n    if (this.remoteMember) {\n      this.remoteVideoMuted = this.remoteMember.videoMuted;\n    }\n  },\n\n  /**\n   * Event handler\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {undefined}\n   */\n  onChangeRemoteMember() {\n    if (this.remoteMember) {\n      this.remoteAudioMuted = this.remoteMember.audioMuted;\n      this.remoteVideoMuted = this.remoteMember.videoMuted;\n    }\n    else {\n      this.remoteAudioMuted = undefined;\n      this.remoteVideoMuted = undefined;\n    }\n  },\n\n  /**\n   * Event handler\n   * @instance\n   * @memberof Call\n   * @param {Membership} model\n   * @private\n   * @returns {undefined}\n   */\n  onMembershipsChangeState(model) {\n    this.activeParticipantsCount = this\n      .memberships\n      .filter((m) => m.state === 'connected')\n      .length;\n\n    this.trigger(`membership:${model.state}`, model);\n  },\n\n  @debounce()\n  /**\n   * Event handler\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {undefined}\n   */\n  onMediaNegotiationNeeded() {\n    this.logger.info('onMediaNegotiationNeeded');\n    this.media.createOffer()\n      .then(() => {\n        // Determine mute state for locus from sdp\n        const offer = parse(this.media.offerSdp);\n        const audioOfferDir = getMediaDirectionFromSDP('audio', offer);\n        const audioMuted = !audioOfferDir.includes('send');\n        const videoOfferDir = getMediaDirectionFromSDP('video', offer);\n        const videoMuted = !videoOfferDir.includes('send');\n        const screenOfferDir = getMediaDirectionFromSDP('screen', offer);\n\n        this.logger.info(`onMediaNegotiationNeeded: audioOfferDir=${audioOfferDir} videoOfferDir=${videoOfferDir} screenOfferDir=${screenOfferDir}`);\n        this.logger.info(`onMediaNegotiationNeeded: audioMuted=${audioMuted} videoMuted=${videoMuted}`);\n        const updateMediaOptions = {\n          sdp: this.media.offerSdp,\n          mediaId: this.mediaId,\n          audioMuted,\n          videoMuted\n        };\n\n        return this.updateMedia(updateMediaOptions);\n      })\n      .then(() => this.pollForExpectedLocusAndSdp())\n      .then(() => {\n        const {sdp} = JSON.parse(this.mediaConnection.remoteSdp);\n\n        return this.media.acceptAnswer(sdp);\n      })\n      .then(() => this.emit('mediaNegotiationCompleted'))\n      .catch((reason) => this.emit('error', reason));\n  },\n\n  /**\n   * Event handler\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {undefined}\n   */\n  onChangeLocalMediaStream() {\n    if (this.localMediaStream && this.localMediaStream !== this.media.localMediaStream) {\n      [\n        'audio',\n        'video'\n      ]\n        .forEach((kind) => {\n          // eslint-disable-next-line max-nested-callbacks\n          const track = this.localMediaStream.getTracks().find((t) => t.kind === kind);\n\n          if (track) {\n            this.media.setMedia(kind, boolToStatus(track.enabled, this[`receiving${capitalize[kind]}`]), track);\n          }\n          else {\n            this.media.setMedia(kind, boolToStatus(false, this[`receiving${capitalize[kind]}`]));\n          }\n        });\n      this.localMediaStream = this.media.localMediaStream;\n    }\n  },\n\n  /**\n   * Event handler\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {undefined}\n   */\n  onChangeIsActive() {\n    if (!this.isActive) {\n      if (this.joinedOnThisDevice) {\n        this.logger.info('call: hanging up due to locus going inactive');\n        this.hangup();\n      }\n    }\n  },\n\n  /**\n   * Event handler\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {undefined}\n   */\n  onChangeActiveParticipantsCount() {\n    if (!this.joinedOnThisDevice) {\n      return;\n    }\n\n    if (this.activeParticipantsCount !== 1) {\n      return;\n    }\n\n    if (this.isCall && !this.config.hangupIfLastActive.call) {\n      return;\n    }\n\n    if (!this.isCall && !this.config.hangupIfLastActive.meeting) {\n      return;\n    }\n\n    const previousLocus = this.previousAttributes().locus;\n\n    if (!previousLocus) {\n      return;\n    }\n\n    if (activeParticipants(previousLocus).length > 1) {\n      this.logger.info('call: hanging up due to last participant in call');\n      this.hangup();\n    }\n  },\n\n  @retry\n  /**\n   * The response to a PUT to LOCUS/media may not be fully up-to-date when we\n   * receive it. This method polls locus until we get a locus with the status\n   * properties we expect (or three errors occur)\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {Promise<Types~Locus>}\n   */\n  pollForExpectedLocusAndSdp() {\n    return new Promise((resolve, reject) => {\n      const offer = parse(this.media.offerSdp);\n\n      const audioOfferDir = getMediaDirectionFromSDP('audio', offer);\n      const videoOfferDir = getMediaDirectionFromSDP('video', offer);\n      const screenOfferDir = getMediaDirectionFromSDP('screen', offer);\n\n      const self = this;\n      let count = 0;\n      const validate = () => {\n        count += 1;\n        try {\n          this.logger.info(`iteration ${count}: checking if current locus sdp has the expected audio and video directions`);\n          if (isExpectedDirection(JSON.parse(this.mediaConnection.remoteSdp).sdp)) {\n            this.logger.info(`iteration ${count}: the current locus sdp has the expected audio and video directions`);\n            try {\n              this.logger.info(`iteration ${count}: checking if current locus has the expected audio and video directions`);\n              this.validateLocusMediaState(this.locus);\n              this.logger.info(`iteration ${count}: the current locus has the expected audio and video directions; not syncing`);\n              resolve();\n\n              return;\n            }\n            catch (err) {\n              this.logger.info(`iteration ${count}: the current locus does not have the expected audio and video directions; syncing`);\n            }\n          }\n          else {\n            this.logger.info(`iteration ${count}: the current locus sdp does not have the expected audio and video directions; syncing`);\n          }\n\n          if (count > 4) {\n            reject(new Error(`After ${count} attempts polling locus`));\n\n            return;\n          }\n\n          setTimeout(() => this.webex.internal.locus.sync(this.locus)\n            .then((locus) => this.setLocus(locus))\n            .then(validate)\n            .catch(reject), 1000 * (2 ** count));\n        }\n        catch (err) {\n          reject(err);\n        }\n      };\n\n      validate();\n      /**\n       * Determine if the incoming sdp has the expected media directions\n       * @private\n       * @param {string} sdp\n       * @returns {boolean}\n       */\n      function isExpectedDirection(sdp) {\n        const answer = parse(sdp);\n\n        const audioAnswerDir = getMediaDirectionFromSDP('audio', answer);\n        const videoAnswerDir = getMediaDirectionFromSDP('video', answer);\n        const screenAnswerDir = getMediaDirectionFromSDP('screen', answer);\n\n        const expectedAudioAnswerDir = reverseMediaDirection(audioOfferDir);\n        const expectedVideoAnswerDir = reverseMediaDirection(videoOfferDir);\n        const expectedScreenAnswerDir = reverseMediaDirection(screenOfferDir);\n\n        self.logger.info(`audio: ${audioOfferDir}, ${audioAnswerDir}, ${expectedAudioAnswerDir}`);\n        self.logger.info(`video: ${videoOfferDir}, ${videoAnswerDir}, ${expectedVideoAnswerDir}`);\n        self.logger.info(`screen: ${screenOfferDir}, ${screenAnswerDir}, ${expectedScreenAnswerDir}`);\n\n        // eslint-disable-next-line max-len\n        return audioAnswerDir === expectedAudioAnswerDir && videoAnswerDir === expectedVideoAnswerDir && screenAnswerDir === expectedScreenAnswerDir;\n      }\n    });\n  },\n\n  /**\n   * Tells locus we're done sharing some or all of our screen.\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {Promise}\n   */\n  releaseFloor() {\n    this.logger.info('call: releasing floor grant');\n\n    return Promise.resolve()\n      .then(waitForMediaShare(this))\n      .then((mediaShare) => this.webex.internal.locus.releaseFloorGrant(this.locus, mediaShare));\n  },\n\n  @oneFlight\n  /**\n   * Rejects an incoming call. Only applies to incoming calls. Invoking this\n   * method on an outgoing call is a no-op.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  reject() {\n    if (this.direction === 'out') {\n      return Promise.resolve();\n    }\n\n    this.logger.info('call: rejecting');\n\n    /* eslint no-invalid-this: [0] */\n    return this.webex.internal.locus.decline(this.locus)\n      .then((locus) => this.setLocus(locus))\n      .then(tap(() => this.cleanup()))\n      .then(tap(() => this.logger.info('call: rejected')));\n  },\n\n  /**\n   * Tells locus we'd like to share some or all of our screen.\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {Promise}\n   */\n  requestFloor() {\n    this.logger.info('call: requesting floor grant');\n\n    return Promise.resolve()\n      .then(waitForMediaShare(this))\n      .then((mediaShare) => this.webex.internal.locus.requestFloorGrant(this.locus, mediaShare));\n  },\n\n  /**\n   * Assigns a new locus to this.locus according to locus sequencing rules\n   * @instance\n   * @memberof Call\n   * @param {Types~Locus} incoming\n   * @param {boolean} recursing - when true, indicates that this method has\n   * called itself and we should fall back to {@link locus.get()} instead of\n   * calling {@link locus.sync()}\n   * @private\n   * @returns {Promise}\n   */\n  setLocus(incoming, recursing = false) {\n    const current = this.locus;\n\n    if (!current) {\n      this.locus = incoming;\n\n      return Promise.resolve();\n    }\n    if (\n      'self' in current && 'self' in incoming &&\n      current.self.devices[0] &&\n      'mediaConnections' in current.self.devices[0] &&\n      incoming.self.state !== 'LEFT'\n    ) {\n      if (\n        'remoteSdp' in current.self.devices[0].mediaConnections[0] &&\n        !('remoteSdp' in incoming.self.devices[0].mediaConnections[0])\n      ) {\n        incoming.self.devices.map((item, index) => {\n          item.mediaConnections = [current.self.devices[index].mediaConnections[index]];\n\n          return item;\n        });\n\n        this.setLocus(incoming);\n      }\n      else if (\n        !('remoteSdp' in current.self.devices[0].mediaConnections[0]) &&\n        'remoteSdp' in incoming.self.devices[0].mediaConnections[0]\n      ) {\n        this.mediaConnections = incoming.self.devices[0].mediaConnections[0];\n        this.locus.self.devices.map((item, index) => {\n          item.mediaConnections = [incoming.self.devices[index].mediaConnections[index]];\n\n          return item;\n        });\n\n        this.setLocus(incoming);\n      }\n    }\n\n    const action = this.webex.internal.locus.compare(current, incoming);\n\n    switch (action) {\n      case USE_INCOMING:\n        this.locus = this.webex.internal.locus.merge(this.locus, incoming);\n        if (this.device) {\n          this.correlationId = this.device.correlationId;\n        }\n        break;\n      case FETCH:\n        if (recursing) {\n          this.logger.info('call: fetching locus according to sequencing algorithm');\n\n          return this.webex.internal.locus.get(current)\n            .then((locus) => this.setLocus(locus, true));\n        }\n\n        this.logger.info('call: syncing locus according to sequencing algorithm');\n\n        return this.webex.internal.locus.sync(current)\n          .then((locus) => this.setLocus(locus, true));\n\n      default:\n      // do nothing\n    }\n\n    return Promise.resolve();\n  },\n\n  /**\n   * Send DTMF tones to the current call\n   * @instance\n   * @memberof Call\n   * @param {string} tones\n   * @returns {Promise}\n   */\n  sendDtmf(tones) {\n    if (!this.supportsDtmf) {\n      return Promise.reject(new Error('this call does not support dtmf'));\n    }\n\n    return this.webex.internal.locus.sendDtmf(this.locus, tones);\n  },\n\n  /**\n   * Sends feedback about the call to the Webex Teams cloud\n   * @instance\n   * @memberof Call\n   * @param {FeedbackObject} feedback\n   * @returns {Promise}\n   */\n  sendFeedback(feedback) {\n    return this.webex.internal.metrics.submit('meetup_call_user_rating', feedback);\n  },\n\n  /**\n   * Shares a particular application as a second stream in the call\n   * @returns {Promise}\n   */\n  startApplicationShare() {\n    this.logger.info('call: sharing application');\n\n    return new Promise((resolve) => {\n      this.media.once('answeraccepted', resolve);\n      this.media.setMedia('screen', 'sendonly', {\n        mediaSource: 'application'\n      });\n    })\n      .then(() => this.requestFloor());\n  },\n\n  /**\n   * Shares the whole screen as a second stream in the call\n   * @returns {Promise}\n   */\n  startScreenShare() {\n    this.logger.info('call: sharing screen');\n\n    return new Promise((resolve) => {\n      this.media.once('answeraccepted', resolve);\n      this.media.setMedia('screen', 'sendonly', {\n        mediaSource: 'screen'\n      });\n    })\n      .then(() => this.requestFloor());\n  },\n\n  /**\n   * Start receiving audio\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startReceivingAudio() {\n    return this.changeReceivingMedia('audio', true);\n  },\n\n  /**\n   * Start receiving video\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startReceivingVideo() {\n    return this.changeReceivingMedia('video', true);\n  },\n\n  /**\n   * Starts sending audio to the Webex Teams Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startSendingAudio() {\n    return this.changeSendingMedia('audio', true);\n  },\n\n  /**\n   * Starts sending video to the Webex Teams Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startSendingVideo() {\n    return this.changeSendingMedia('video', true);\n  },\n\n  /**\n   * Stops sharing an application or whole screen media stream\n   * @returns {Promise}\n   */\n  stopScreenShare() {\n    this.logger.info('call: stopping screen/application share');\n\n    return this.releaseFloor()\n      .then(() => new Promise((resolve) => {\n        this.media.once('answeraccepted', resolve);\n        this.media.setMedia('screen', 'inactive');\n      }));\n  },\n\n  /**\n   * Stop receiving audio\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopReceivingAudio() {\n    return this.changeReceivingMedia('audio', false);\n  },\n\n  /**\n   * Stop receiving video\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopReceivingVideo() {\n    return this.changeReceivingMedia('video', false);\n  },\n\n  /**\n   * Stops sending audio to the Webex Teams Cloud. (stops broadcast immediately,\n   * even if renegotiation has not completed)\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopSendingAudio() {\n    return this.changeSendingMedia('audio', false);\n  },\n\n  /**\n   * Stops sending video to the Webex Teams Cloud. (stops broadcast immediately,\n   * even if renegotiation has not completed)\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopSendingVideo() {\n    return this.changeSendingMedia('video', false);\n  },\n\n  /**\n   * Replaces the current mediaStrem with one with identical constraints, except\n   * for an opposite facing mode. If the current facing mode cannot be\n   * determined, the facing mode will be set to `user`. If the call is audio\n   * only, this function will throw.\n   * @instance\n   * @memberof Call\n   * @returns {undefined}\n   */\n  toggleFacingMode() {\n    if (!this.sendingVideo) {\n      throw new Error('Cannot toggle facingMode if we\\'re not sending video');\n    }\n\n    if (this.facingMode !== 'user' && this.facingMode !== 'environment') {\n      throw new Error('Cannot determine current facing mode; specify a new localMediaStream to change cameras');\n    }\n\n    const constraint = {\n      facingMode: {\n        ideal: this.facingMode === 'user' ? 'environment' : 'user'\n      }\n    };\n\n    // Constraint changes that don't result in a new sender does not trigger renegotiate\n    // We now use replaceTrack to swap in a new media\n    return this.media.setMedia('video', boolToStatus(this.sendingAudio, this.sendingVideo), constraint)\n      .then(() => {\n        this.facingMode = constraint.facingMode.ideal;\n      });\n  },\n\n  /**\n   * Toggles receiving audio from the Webex Teams Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleReceivingAudio() {\n    return this.receivingAudio ? this.stopReceivingAudio() : this.startReceivingAudio();\n  },\n\n  /**\n   * Toggles receiving video from the Webex Teams Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleReceivingVideo() {\n    return this.receivingVideo ? this.stopReceivingVideo() : this.startReceivingVideo();\n  },\n\n  /**\n   * Toggles sending audio to the Webex Teams Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleSendingAudio() {\n    return this.sendingAudio ? this.stopSendingAudio() : this.startSendingAudio();\n  },\n\n  /**\n   * Toggles sending video to the Webex Teams Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleSendingVideo() {\n    return this.sendingVideo ? this.stopSendingVideo() : this.startSendingVideo();\n  },\n\n  /**\n   * Changes the status of media\n   * @instance\n   * @memberof Call\n   * @param {Object} payload\n   * @private\n   * @returns {Promise}\n   */\n  updateMedia(payload) {\n    this.logger.info('updateMedia');\n    if (payload.sdp && !payload.sdp.includes('b=')) {\n      throw new Error('outbound sdp should always have a \\'b=\\' line');\n    }\n\n    return this.webex.internal.locus.updateMedia(this.locus, payload)\n      .then((locus) => this.setLocus(locus));\n  },\n\n  /**\n   * Updates sdp with correct video status\n   * @instance\n   * @memberof Call\n   * @param {string} sdp\n   * @param {boolean} isMuted\n   * @private\n   * @returns {Promise}\n   */\n  updateVideoMuteSdp(sdp, isMuted) {\n    const newDir = boolToDirection(!isMuted, this.receivingVideo);\n    const oldDir = boolToDirection(isMuted, this.receivingVideo);\n\n    return sdp.replace(new RegExp(`a=mid:video[^a]+a=${oldDir}`, 'gi'), `a=mid:video\\na=${newDir}`);\n  },\n\n  @oneFlight\n  /**\n   * Tells locus we've got a new media direction\n   * @instance\n   * @memberof Call\n   * @param {string} kind of 'audio' or 'video'\n   * @param {boolean} value\n   * @private\n   * @returns {Promise}\n   */\n  updateMuteToggles(kind, value) {\n    this.logger.info(`updating mute toggles: ${kind}=${value}`);\n    const payload = {\n      mediaId: this.mediaId,\n      audioMuted: !this.sendingAudio,\n      videoMuted: !this.sendingVideo\n    };\n\n    if (kind === 'audio') {\n      payload.audioMuted = !value;\n    }\n    else if (kind === 'video') {\n      payload.videoMuted = !value;\n      payload.sdp = this.updateVideoMuteSdp(this.media.offerSdp, !value);\n    }\n\n    return this.updateMedia(payload);\n  },\n\n  /**\n   * Checks that this.locus has the expected state\n   * @instance\n   * @memberof Call\n   * @param {Types~Locus} locus\n   * @private\n   * @returns {Promise}\n   */\n  validateLocusMediaState(locus) {\n    const locusAudio = locus.self.status.audioStatus.toLowerCase();\n    const mediaAudio = this.media.audioDirection;\n\n    if (locusAudio !== mediaAudio) {\n      this.logger.warn(`locus: expected audio ${locusAudio} (locus) to equal ${mediaAudio} (local media)`);\n      throw new Error('locus.self.status.audioStatus indicates the received DTO is out of date');\n    }\n\n    const locusVideo = locus.self.status.videoStatus.toLowerCase();\n    const mediaVideo = this.media.videoDirection;\n\n    if (locusVideo !== mediaVideo) {\n      this.logger.warn(`locus: expected video ${locusVideo} (locus) to equal ${mediaVideo} (local media)`);\n      throw new Error('locus.self.status.videoStatus indicates the received DTO is out of date');\n    }\n\n    return locus;\n  },\n\n  /**\n   * Waits until this.locus describes the expected state\n   * @instance\n   * @memberof Call\n   * @private\n   * @returns {Promise}\n   */\n  waitForExpectedLocus() {\n    return new Promise((resolve) => {\n      const listener = () => {\n        try {\n          this.validateLocusMediaState(this.locus);\n          this.off('change:locus', listener);\n          resolve();\n        }\n        catch (err) {\n          this.logger.warn('locus: current locus not in expected state; waiting for next locus');\n        }\n      };\n\n      this.on('change:locus', listener);\n      listener();\n    });\n  }\n});\n\nCall.make = function make(attrs, options) {\n  return new Call(attrs, options);\n};\n\nexport default Call;\n"]}